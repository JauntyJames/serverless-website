{"version":3,"sources":["components/FormItem.js","FormContainer.js","components/NameComponent.js","components/NameList.js","App.js","reportWebVitals.js","index.js"],"names":["FormItem","props","name","type","value","content","onChange","event","target","changeSubmission","FormContainer","state","submission","bind","handleSubmit","this","setState","preventDefault","id","Math","floor","random","formPayload","fld_str","fld_id","addNewSubmission","onSubmit","label","className","Component","NameComponent","NameList","nameArray","names","map","item","apigw","App","fetch","method","body","JSON","stringify","then","response","ok","json","Error","newNamesArray","concat","catch","error","console","message","errorMessage","status","statusText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAoBeA,EAlBE,SAACC,GAMhB,OACE,gCACE,uBACEC,KAAMD,EAAMC,KACZC,KAAK,OACLC,MAAOH,EAAMI,QACbC,SAXa,SAACC,GAClB,IAAIH,EAAQG,EAAMC,OAAOJ,MACzBH,EAAMQ,iBAAiBL,SCuCZM,E,kDAxCb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,WAAY,IAEd,EAAKH,iBAAmB,EAAKA,iBAAiBI,KAAtB,gBACxB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANH,E,oDASnB,SAAiBT,GACfW,KAAKC,SAAS,CAAEJ,WAAYR,M,0BAG9B,SAAaG,GACXA,EAAMU,iBACN,IAAIC,EAAKC,KAAKC,MAAuB,IAAhBD,KAAKE,SAAuB,GAC7CC,EAAc,CAChBC,QAASR,KAAKJ,MAAMC,WACpBY,OAAQN,GAEVH,KAAKd,MAAMwB,iBAAiBH,GAC5BP,KAAKC,SAAS,CAACJ,WAAY,O,oBAG7B,WAAU,IAAD,OAEP,OACE,uBAAMc,SAAUX,KAAKD,aAArB,UACE,cAAC,EAAD,CACET,QAASU,KAAKJ,MAAMC,WACpBe,MAAM,aACNzB,KAAK,aACLO,iBAPmB,SAACL,GAAY,EAAKK,iBAAiBL,MASxD,uBAAOwB,UAAU,SAASzB,KAAK,SAASC,MAAM,kB,GAnC1ByB,aCQbC,EATO,SAAA7B,GAEpB,OACE,8BACGA,EAAMC,QCcE6B,EAjBE,SAAA9B,GACf,IAAI+B,EAAY/B,EAAMgC,MAAMC,KAAI,SAAAC,GAC9B,OACE,cAAC,EAAD,CAEEjC,KAAMiC,EAAKZ,SADNY,EAAKX,WAMhB,OACE,6BACGQ,KCVDI,EAAQ,kFA6DCC,E,kDA1Db,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXsB,MAAO,CAAC,CAAC,OAAU,EAAG,QAAU,MAElC,EAAKR,iBAAmB,EAAKA,iBAAiBZ,KAAtB,gBALP,E,oDAQnB,SAAiBS,GAAc,IAAD,OAC5BgB,MAAM,GAAD,OAAIF,EAAJ,YAAqB,CACxBG,OAAQ,OACRC,KAAMC,KAAKC,UAAUpB,KAEtBqB,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGhB,MADY,IAAIC,MAAM,uBAIzBJ,MAAK,SAAAG,GACJ,IAAIE,EAAgB,EAAKrC,MAAMsB,MAAMgB,OAAOH,GAC5C,EAAK9B,SAAS,CAAEiB,MAAOe,OAExBE,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAR,0BAAiCA,EAAME,e,+BAGzD,WAAqB,IAAD,OAClBf,MAAM,GAAD,OAAIF,EAAJ,cACFO,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIU,EAAY,UAAMV,EAASW,OAAf,aAA0BX,EAASY,WAAnC,KAEhB,MADY,IAAIT,MAAMO,MAIzBX,MAAK,SAAAC,GAAQ,OAAIA,EAASE,UAC1BH,MAAK,SAAAH,GACJ,EAAKxB,SAAS,CAAEiB,MAAOO,OAExBU,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAR,0BAAiCA,EAAME,e,oBAG3D,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAUK,MAAOlB,KAAKJ,MAAMsB,QAC5B,cAAC,EAAD,CAAeR,iBAAkBV,KAAKU,4B,GApD9BI,aCKH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75e6d25c.chunk.js","sourcesContent":["import React from 'react';\n\nconst FormItem = (props) => {\n  let handleChange = (event) => {\n    let value = event.target.value;\n    props.changeSubmission(value)\n  }\n\n  return (\n    <label>\n      <input\n        name={props.name}\n        type='text'\n        value={props.content}\n        onChange={handleChange}\n      />\n    </label>\n  )\n}\n\nexport default FormItem;\n","import React, { Component } from 'react';\nimport FormItem from './components/FormItem'\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      submission: ''\n    }\n    this.changeSubmission = this.changeSubmission.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  changeSubmission(value) {\n    this.setState({ submission: value })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    let id = Math.floor((Math.random() * 10000000) + 1)\n    let formPayload = {\n      fld_str: this.state.submission,\n      fld_id: id\n    }\n    this.props.addNewSubmission(formPayload)\n    this.setState({submission: ''})\n  }\n\n  render() {\n    let passDownSubmission = (value) => { this.changeSubmission(value) }\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <FormItem\n          content={this.state.submission}\n          label='Submission'\n          name='submission'\n          changeSubmission={passDownSubmission}\n        />\n        <input className=\"button\" type=\"submit\" value=\"submit\" />\n      </form>\n    )\n  }\n}\n\nexport default FormContainer;\n","import React from \"react\"\n\nconst NameComponent = props => {\n\n  return (\n    <div>\n      {props.name}\n    </div>\n  )\n}\n\nexport default NameComponent\n","import React from 'react'\nimport NameComponent from './NameComponent'\n\nconst NameList = props => {\n  let nameArray = props.names.map(item => {\n    return (\n      <NameComponent\n        key={item.fld_id}\n        name={item.fld_str}\n      />\n    )\n  })\n\n  return (\n    <ul>\n      {nameArray}\n    </ul>\n  )\n}\n\nexport default NameList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport FormContainer from './FormContainer'\nimport NameList from './components/NameList';\n\nconst apigw = 'https://gpaxew3tdjwmudc5xi5dgifiei.apigateway.us-ashburn-1.oci.customer-oci.com' // Change me\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: [{\"fld_id\": 1, \"fld_str\":\"\"}]\n    };\n    this.addNewSubmission = this.addNewSubmission.bind(this)\n  }\n\n  addNewSubmission(formPayload) {\n    fetch(`${apigw}/v1/name`, {\n      method: 'POST',\n      body: JSON.stringify(formPayload)\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        let error = new Error('submission error')\n        throw (error)\n      }\n    })\n    .then(json => {\n      let newNamesArray = this.state.names.concat(json)\n      this.setState({ names: newNamesArray })\n    })\n    .catch(error => console.error(`Error in fetch: ${error.message}`))\n  }\n\n  componentDidMount() {\n    fetch(`${apigw}/v1/names`)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          let errorMessage = `${response.status} (${response.statusText})`,\n              error = new Error(errorMessage);\n          throw(error);\n        }\n      })\n      .then(response => response.json())\n      .then(body => {\n        this.setState({ names: body });\n      })\n      .catch(error => console.error(`Error in fetch: ${error.message}`));\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NameList names={this.state.names}/>\n          <FormContainer addNewSubmission={this.addNewSubmission}/>\n        </header>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}